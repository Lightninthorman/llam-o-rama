{"ast":null,"code":"var _jsxFileName = \"/Users/arthurkuivanen/dev/group_projects/Unit4Project/llam-o-rama/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header.js';\nimport Main from './components/Main.js';\nimport Show from './components/Show.js';\nimport Form from './components/Form.js';\nimport Cart from './components/Cart.js';\nimport data from './data.js';\nlet baseUrl = \"https://llama-backend.herokuapp.com/llamas\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreate = createData => {\n      fetch(`${baseUrl}`, {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'applicaiont/json'\n        }\n      }).then(createdItem => {\n        return createdItem.json();\n      }).then(jsonnedPost => {\n        console.log(jsonnedPost);\n        this.state.handleView('home');\n      }).catch(err => console.log(err));\n    };\n\n    this.handleView = (view, showItem) => {\n      let formInputs = {\n        item: \"\",\n        image: \"\",\n        price: 0,\n        rating: 1,\n        description: \"\",\n        onSale: false,\n        subscription: false,\n        category: \"kitchen\"\n      };\n\n      if (view === 'edit') {\n        console.log(showItem);\n        formInputs = {\n          item: showItem.item,\n          image: showItem.image,\n          price: showItem.price,\n          rating: showItem.rating,\n          description: showItem.description,\n          onSale: showItem.onSale,\n          subscription: showItem.subscription,\n          category: showItem.category\n        };\n      }\n\n      this.setState({\n        view: view,\n        showItem: showItem,\n        formInputs: formInputs\n      });\n    };\n\n    this.addToCart = item => {\n      this.setState({\n        cartItems: [item, ...this.state.cartItems]\n      });\n    };\n\n    this.removeFromCart = index => {\n      let cart = this.state.cartItems;\n      let newCart = cart.splice(index, 1);\n      this.setState({\n        cartItems: cart\n      });\n    };\n\n    this.checkout = () => {\n      this.setState({\n        view: 'home',\n        cartItems: []\n      });\n    };\n\n    this.state = {\n      items: data,\n      view: 'home',\n      cartItems: [],\n      formInputs: {\n        item: \"\",\n        image: \"\",\n        price: 0,\n        rating: 1,\n        description: \"\",\n        onSale: false,\n        subscription: false,\n        category: \"\"\n      },\n      showItem: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Header, {\n      view: this.state.view,\n      handleView: this.handleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), this.state.view === 'home' ? React.createElement(Main, {\n      items: this.state.items,\n      view: this.state.view,\n      handleView: this.handleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }) : this.state.view === 'cart' ? React.createElement(Cart, {\n      view: this.state.view,\n      cartItems: this.state.cartItems,\n      handleView: this.handleView,\n      removeFromCart: this.removeFromCart,\n      checkout: this.checkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }) : this.state.view === 'show' ? React.createElement(Show, {\n      item: this.state.showItem,\n      view: this.state.view,\n      handleView: this.handleView,\n      addToCart: this.addToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }) : React.createElement(Form, {\n      view: this.state.view,\n      formInputs: this.state.formInputs,\n      handleCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/arthurkuivanen/dev/group_projects/Unit4Project/llam-o-rama/src/App.js"],"names":["React","Header","Main","Show","Form","Cart","data","baseUrl","App","Component","constructor","props","handleCreate","createData","fetch","body","JSON","stringify","method","headers","then","createdItem","json","jsonnedPost","console","log","state","handleView","catch","err","view","showItem","formInputs","item","image","price","rating","description","onSale","subscription","category","setState","addToCart","cartItems","removeFromCart","index","cart","newCart","splice","checkout","items","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/Header.js'\nimport Main from './components/Main.js'\nimport Show from './components/Show.js'\nimport Form from './components/Form.js'\nimport Cart from './components/Cart.js'\nimport data from './data.js'\n\nlet baseUrl = \"https://llama-backend.herokuapp.com/llamas\"\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            items:data,\n            view:'home',\n            cartItems:[],\n            formInputs:{\n                item:\"\",\n                image:\"\",\n                price:0,\n                rating:1,\n                description:\"\",\n                onSale:false,\n                subscription:false,\n                category:\"\"\n            },\n            showItem:{}\n        }\n    }\n\n    handleCreate = (createData) => {\n        fetch(`${baseUrl}`,{\n            body:JSON.stringify(createData),\n            method: 'POST',\n            headers:{\n                'Accept': 'application/json, text/plain, */*', 'Content-Type':'applicaiont/json'\n            }\n        })\n        .then(createdItem => {\n            return createdItem.json()\n        })\n        .then(jsonnedPost =>{\n            console.log(jsonnedPost);\n            this.state.handleView('home')\n\n        })\n        .catch(err=>console.log(err))\n    }\n\n    handleView = (view,showItem) =>{\n\n        let formInputs ={\n            item:\"\",\n            image:\"\",\n            price:0,\n            rating:1,\n            description:\"\",\n            onSale:false,\n            subscription:false,\n            category:\"kitchen\"\n        }\n        if(view === 'edit'){\n            console.log(showItem);\n            formInputs = {\n                item:showItem.item,\n                image:showItem.image,\n                price:showItem.price,\n                rating:showItem.rating,\n                description:showItem.description,\n                onSale:showItem.onSale,\n                subscription:showItem.subscription,\n                category:showItem.category\n            }\n        }\n\n        this.setState({\n            view:view,\n            showItem: showItem,\n            formInputs:formInputs\n\n        })\n    }\n\n    addToCart = (item) => {\n        this.setState({\n            cartItems: [item, ...this.state.cartItems]\n        })\n    }\n\n    removeFromCart = (index) =>{\n        let cart = this.state.cartItems\n        let newCart = cart.splice(index,1)\n        this.setState({\n            cartItems:cart\n        })\n    }\n\n    checkout = () => {\n        this.setState({\n            view:'home',\n            cartItems:[]\n        })\n    }\n\n    render(){\n        return(\n            <div className='container'>\n                <Header\n                    view={this.state.view}\n                    handleView={this.handleView}\n                />\n\n                {/*Begin If statements to establish what page is shown based on what this.state.view is*/}\n                {this.state.view === 'home' ?\n                <Main\n                    items={this.state.items}\n                    view={this.state.view}\n                    handleView={this.handleView}\n                />\n                :\n                this.state.view === 'cart'?\n                <Cart\n                    view={this.state.view}\n                    cartItems={this.state.cartItems}\n                    handleView={this.handleView}\n                    removeFromCart={this.removeFromCart}\n                    checkout={this.checkout}\n                />\n                :\n                this.state.view === 'show'?\n                <Show\n                    item={this.state.showItem}\n                    view={this.state.view}\n                    handleView={this.handleView}\n                    addToCart={this.addToCart}\n                />\n                :\n                <Form\n                    view={this.state.view}\n                    formInputs={this.state.formInputs}\n                    handleCreate = {this.handleCreate}\n                />\n\n                }\n\n\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}